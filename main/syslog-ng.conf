@version: 3.14

options {
    log_msg_size(65536);
    flush_lines (0);
    time_reopen (10);
    log_fifo_size (50000);
    chain_hostnames (off);
    use_dns (no);
    use_fqdn (no);
    create_dirs (yes);
    keep_hostname (yes);
    ts_format (iso);

    # log milliseconds
    frac_digits (3);
};

source s_network_tcp {
    syslog(
        transport("tcp")
        port(602)
        max-connections(500)
        flags(no-multi-line)
    );
};

source s_internal {
    internal();
};

# For Datadog platform
template DatadogFormat { template("DD_APPLICATION_KEY <${PRI}>1 ${ISODATE} ${HOST:--} ${PROGRAM:--} ${PID:--} ${MSGID:--} ${SDATA:--} $MSG\n"); };

destination d_datadog { tcp("intake.logs.datadoghq.com" port(10514) template(DatadogFormat)); };

destination d_application {
    file("/var/log/syslog-logs/${HOST}-${YEAR}-${MONTH}-${DAY}-${HOUR}.log"
        flags(syslog-protocol)
    );
};

destination d_palo_alto { file(“/var/log/paloalto/$HOST/$YEAR-$MONTH-$DAY-palo.log” create_dirs(yes)); };


destination d_syslogng_file { file("/var/log/syslog-ng.log"); };

filter heartbeat_filter { not message("/monitors/lb") and not message("/.ping") and not message(":in ") and not message("ddtrace"); };
filter f_palo_alto { message("TRAFFIC"); };
filter f_not_palo_alto { not (
  filter(f_palo_alto)
  );
};
