#
# for td-agent.conf for container
#
# forward container syslog-ng data in rfc5424 format - plugin has also been removed
#<source>
 # @type http_heartbeat
 # port 24223
 # bind 0.0.0.0
#</source>

# feed from remote supervisord.log
<source>
  @type tail
  read_lines_limit 10
  path /var/log/supervisord.log
  pos_file "/var/log/td-agent/supervisord.pos"
  tag supervisord
  <parse>
    @type regexp
    expression /^(?<time>[0-9]{4}\-[0-9]{2}\-[0-9]{2}[ ][0-9]{2}\:[0-9]{2}\:[0-9]{2}\,[0-9]{3}) (?<msg_type>[^ ]*) (?<message>.+)$/
    time_format %Y-%m-%d %H:%M:%S,%L
  </parse>
</source>

# feed from local messages file
<source>
  @type tail
  read_lines_limit 10
  path /var/log/messages
  pos_file "/var/log/td-agent/messages.pos"
  tag messages
  <parse>
    @type syslog
  </parse>
</source>

# feed from containers syslog-ng - PAN only
<source>
  @type tail
  #read_lines_limit 10
  path /var/log/syslog-logs/p30*ccci*
  pos_file "/var/log/td-agent/pan.pos"
  tag panlog
  <parse>
    @type multi_format

    # keep timezone of the data coming in - false uses local fluentd server
    keep_time_key true

    # Threat Log
    <pattern>
      format regexp
      expression /^\<(?<pri>[0-9]{1,5})\>[1] (?<time>[0-9]{4}\-[0-9]{2}\-[0-9]{2}[T][0-9]{2}\:[0-9]{2}\:[0-9]{2}\.[0-9]{3}\+[0-9]{2}\:[0-9]{2}) (?<container>[^ ]*) (?<suf>[0-9]{1,5}),(?<receive_date>^$|[0-9]{4}\/[0-9]{2}\/[0-9]{2}) (?<other_date_data>\- \- \-) (?<received_time>^$|[0-9]{2}\:[0-9]{2}\:[0-9]{2}),(?<serial_num>$|[\d]*),(?<log_type>[THREAT]*),(?<subtype_threat>^$|[^,]*),(?<unkn_1>^$|[\d]*),(?<generated_date>^$|[0-9]{4}\/[0-9]{2}\/[0-9]{2}) (?<generated_time>^$|[0-9]{2}\:[0-9]{2}\:[0-9]{2}),(?<source_address>^$|[^,]*),(?<destination_address>^$|^$|[^,]*),(?<nat_source_ip>^$|^$|[^,]*),(?<nat_destination_ip>^$|^$|[^,]*),(?<rule_name>^$|[^,]*),(?<source_user>^$|[^,]*),(?<destination_user>^$|[^,]*),(?<service>^$|[^,]*),(?<virtual_system>^$|[^,]*),(?<source_zone_from>^$|[^,]*),(?<destination_zone_to>^$|[^,]*),(?<inbound_interface>^$|[^,]*),(?<outbound_interface>^$|[^,]*),(?<log_forwarding_profile>^$|[^,]*),(?<unkn_date>^$|[0-9]{4}\/[0-9]{2}\/[0-9]{2}) (?<unkn_time>^$|[0-9]{2}\:[0-9]{2}\:[0-9]{2}),(?<session_id>^$|[^,]*),(?<repeat_count>^$|[^,]*),(?<source_port>^$|[^,]*),(?<destination_port>^$|[^,]*),(?<nat_source_port>^$|[^,]*),(?<nat_destination_port>^$|[^,]*),(?<flags>^$|[^,]*),(?<ip_protocol>^$|[^,]*),(?<action>^$|[^,]*),(?<misc_field>^$|[^,]*),(?<threat_id>^$|[^,]*),(?<category>^$|[^,]*),(?<severity>^$|[^,]*),(?<direction>^$|[^,]*),(?<seq_num>^$|[^,]*),(?<action_flags>^$|[^,]*),(?<unkn_2>^$|[^,]*),(?<source_location>^$|[^,]*),(?<destination_location>^$|[^,]*),(?<content_type_uni_rec_loc>^$|[^,]*)\,(?<pcap_id>^$|[^,]*),(?<file_digest_wf>^$|[^,]*),(?<cloud>^$|[^,]*),(?<ur_loc_index>^$|[^,]*),(?<user_agent>^$|[^,]*),(?<file_type_wf>^$|[^,]*),(?<x_forwarder_for_ur_loc>^$|[^,]*),(?<referer_ur_loc>^$|[^,]*),(?<sender_wf>^$|[^,]*),(?<subject_wf>^$|[^,]*),(?<recipient_wf>^$|[^,]*),(?<report_id>^$|[^,]*),(?<device_group_hierarchy>^$|[^,]*),(?<virtual_system_name>^$|[^,]*),(?<unkn_3>^$|[^,]*),(?<unkn_4>^$|[^,]*),(?<unkn_5>^$|[^,]*),(?<host>.+)$/
      time_format %Y-%m-%dT%H:%M:%S.%L%z
    </pattern>

    # Traffic Log - not tested on actual data - guessed based on docs - syntac checked
    <pattern>
      format regexp
      expression /^\<(?<pri>[0-9]{1,5})\>[1] (?<time>[0-9]{4}\-[0-9]{2}\-[0-9]{2}[T][0-9]{2}\:[0-9]{2}\:[0-9]{2}\.[0-9]{3}\+[0-9]{2}\:[0-9]{2}) (?<container>[^ ]*) (?<suf>[0-9]{1,5}),(?<receive_date>^$|[0-9]{4}\/[0-9]{2}\/[0-9]{2}) (?<other_date_data>\- \- \-) (?<received_time>^$|[0-9]{2}\:[0-9]{2}\:[0-9]{2}),(?<serial_num>$|[\d]*),(?<log_type>[TRAFFIC]*),(?<subtype_threat>^$|[^,]*),(?<unkn_1>^$|[\d]*),(?<generated_date>^$|[0-9]{4}\/[0-9]{2}\/[0-9]{2}) (?<generated_time>^$|[0-9]{2}\:[0-9]{2}\:[0-9]{2}),(?<source_address>^$|[^,]*),(?<destination_address>^$|^$|[^,]*),(?<nat_source_ip>^$|^$|[^,]*),(?<nat_destination_ip>^$|^$|[^,]*),(?<rule_name>^$|[^,]*),(?<source_user>^$|[^,]*),(?<destination_user>^$|[^,]*),(?<service>^$|[^,]*),(?<virtual_system>^$|[^,]*),(?<source_zone_from>^$|[^,]*),(?<destination_zone_to>^$|[^,]*),(?<inbound_interface>^$|[^,]*),(?<outbound_interface>^$|[^,]*),(?<log_forwarding_profile>^$|[^,]*),(?<unkn_date>^$|[0-9]{4}\/[0-9]{2}\/[0-9]{2}) (?<unkn_time>^$|[0-9]{2}\:[0-9]{2}\:[0-9]{2}),(?<session_id>^$|[^,]*),(?<repeat_count>^$|[^,]*),(?<source_port>^$|[^,]*),(?<destination_port>^$|[^,]*),(?<nat_source_port>^$|[^,]*),(?<nat_destination_port>^$|[^,]*),(?<flags>^$|[^,]*),(?<ip_protocol>^$|[^,]*),(?<action>^$|[^,]*),(?<bytes>^$|[^,]*),(?<bytes_sent>^$|[^,]*),(?<bytes_received>^$|[^,]*),(?<packets_total>^$|[^,]*),(?<session_start_time>^$|[^,]*),(?<session_stop_time>^$|[^,]*),(?<category>^$|[^,]*),(?<seq_num>^$|[^,]*),(?<action_flags>^$|[^,]*),(?<unkn_2>^$|[^,]*),(?<source_location>^$|[^,]*),(?<destination_location>^$|[^,]*),(?<packets_sent>^$|[^,]*)\,(?<packets_received>^$|[^,]*),(?<session_end>^$|[^,]*),(?<device_group_hierarchy>^$|[^,]*),(?<virtual_system_name>^$|[^,]*),(?<host>^$|[^,]*),(?<action_source>.+)$/
      time_format %Y-%m-%dT%H:%M:%S.%L%z
    </pattern>

    # System Log
    <pattern>
      format regexp
      expression /^\<(?<pri>[0-9]{1,5})\>[1] (?<time>[0-9]{4}\-[0-9]{2}\-[0-9]{2}[T][0-9]{2}\:[0-9]{2}\:[0-9]{2}\.[0-9]{3}\+[0-9]{2}\:[0-9]{2}) (?<container>[^ ]*) (?<suf>[0-9]{1,5}),(?<receive_date>^$|[0-9]{4}\/[0-9]{2}\/[0-9]{2}) (?<other_date_data>\- \- \-) (?<received_time>^$|[0-9]{2}\:[0-9]{2}\:[0-9]{2}),(?<serial_num>$|[\d]*),(?<log_type>[SYSTEM]*),(?<service>^$|[^,]*),(?<unkn_1>^$|[\d]*),(?<generated_date>^$|[0-9]{4}\/[0-9]{2}\/[0-9]{2}) (?<generated_time>^$|[0-9]{2}\:[0-9]{2}\:[0-9]{2}),(?<virtual_system>^$|[^,]*),(?<event_id>^$|[^,]*),(?<object>^$|[^,]*),(?<module>^$|[^,]*),(?<severity>^$|[^,]*),(?<description1>^$|[^,]*),(?<description2>^$|[^,]*),(?<misc>^$|[^,]*),(?<seq_num>^$|[^,]*),(?<action_flags>^$|[^,]*),(?<device_group_hierarchy>^$|[^,]*),(?<virtual_system_name>^$|[^,]*),(?<unkn_2>^$|[^,]*),(?<unkn_3>^$|[^,]*),(?<unkn_4>^$|[^,]*),(?<host>.+)$/
      time_format %Y-%m-%dT%H:%M:%S.%L%z
    </pattern>

    # Correlation
    <pattern>
      format regexp
      expression /^\<(?<pri>[0-9]{1,5})\>[1] (?<time>[0-9]{4}\-[0-9]{2}\-[0-9]{2}[T][0-9]{2}\:[0-9]{2}\:[0-9]{2}\.[0-9]{3}\+[0-9]{2}\:[0-9]{2}) (?<container>[^ ]*) (?<generated_date>^$|[0-9]{2}\/[0-9]{2}\/[0-9]{2}) (?<other_date_data>\- \- \-) (?<generated_time>^$|[0-9]{2}\:[0-9]{2}\:[0-9]{2}),(?<serial_num>$|[\d]*),(?<unkn_1>^$|[^,]*),(?<log_type>[CORRELATION]*),(?<service>^$|[^,]*),(?<source_address>^$|[^,]*),(?<source_user>^$|[^,]*),(?<virtual_system>^$|[^,]*),(?<category>^$|[^,]*),(?<severity>^$|[^,]*),(?<device_group_hierarchy>^$|[^,]*),(?<virtual_system_name>^$|[^,]*),(?<host>^$|[^,]*),(?<virtual_sys_id>^$|[^,]*),(?<object_name>^$|[^,]*),(?<object_id>^$|[^,]*),(?<evidence>.+)$/
      time_format %Y-%m-%dT%H:%M:%S.%L%z
    </pattern>
 
    # catch all with PAN standard time field - if necessary
    <pattern>
      format regexp
      expression /^\<(?<pri>[0-9]{1,5})\>[1] (?<time>[0-9]{4}\-[0-9]{2}\-[0-9]{2}[T][0-9]{2}\:[0-9]{2}\:[0-9]{2}\.[0-9]{3}\+[0-9]{2}\:[0-9]{2}) (?<container>[^ ]*) (?<suf>[0-9]{1,5}),(?<message>.+)$/
      time_format %Y-%m-%dT%H:%M:%S.%L%z
    </pattern>

    # catch all with PAN non-standard time field - if necessary
    <pattern>
      format regexp
      expression /^\<(?<pri>[0-9]{1,5})\>[1] (?<time>[0-9]{4}\-[0-9]{2}\-[0-9]{2}[T][0-9]{2}\:[0-9]{2}\:[0-9]{2}\.[0-9]{3}\+[0-9]{2}\:[0-9]{2}) (?<container>[^ ]*) (?<message>.+)$/
      time_format %Y-%m-%dT%H:%M:%S.%L%z
    </pattern>

    # catch all that do not match anything
    <pattern>
      format regexp
      expression /^(?<message>.+)$/
    </pattern>
  </parse>
</source>

# feed from container's syslog-ng - except PAN logs
<source>
  @type tail
  read_lines_limit 10
  path /var/log/syslog-logs/*
  pos_file "/var/log/td-agent/syslog.pos"
  exclude_path ["/var/log/syslog-logs/p30*ccci*"]
  tag syslog-rfc5424
  <parse>
    @type multi_format

    <pattern>
      format regexp
      expression /^\<(?<pri>[0-9]{1,5})\>[1] (?<time>[0-9]{4}\-[0-9]{2}\-[0-9]{2}[T][0-9]{2}\:[0-9]{2}\:[0-9]{2}\.[0-9]{3}\+[0-9]{2}\:[0-9]{2}) (?<container>[^ ]*) (?<ident>[^ ]*) (?<pid>[-0-9]*) (?<msgid>[^ ]*) [\[](?<extradata>[^ ]*) \w*\=\"(?<project_name>[^\"]*)\" \w*\=\"(?<environment>[^\"]*)\"\] (?<orglg_date>[0-9]{4}\-[0-9]{2}\-[0-9]{2}) (?<orglg_time>[0-9]{2}\:[0-9]{2}\:[0-9]{2}\,[0-9]{3}) [\[](?<thread_name>[^ ]*)\] (?<orglg_msg_type>[^ ]*) (?<message>.+)$/
      time_format %Y-%m-%dT%H:%M:%S.%L%z
    </pattern>

    <pattern>
      format regexp
      expression /^\<(?<pri>[0-9]{1,5})\>[1] (?<time>[0-9]{4}\-[0-9]{2}\-[0-9]{2}[T][0-9]{2}\:[0-9]{2}\:[0-9]{2}\.[0-9]{3}\+[0-9]{2}\:[0-9]{2}) (?<container>[^ ]*) (?<ident>[^ ]*) (?<pid>[-0-9]*) (?<msgid>[^ ]*) [\[](?<extradata>[^ ]*) \w*\=\"(?<project_name>[^\"]*)\" \w*\=\"(?<environment>[^\"]*)\"\]\[[a-zA-Z,\s]+[\=\"]+(?<meta_seq_id>[\d]*)\"\] \[[a-zA-Z,\:]+(?<req_id>[^ ]*)\] (?<message>.+)$/
      time_format %Y-%m-%dT%H:%M:%S.%L%z
      types meta_seq_id:integer
    </pattern>

    <pattern>
      format regexp
      expression /^\<(?<pri>[0-9]{1,5})\>[1] (?<time>[0-9]{4}\-[0-9]{2}\-[0-9]{2}[T][0-9]{2}\:[0-9]{2}\:[0-9]{2}\.[0-9]{3}\+[0-9]{2}\:[0-9]{2}) (?<container>[^ ]*) (?<ident>[^ ]*) (?<pid>[-0-9]*) (?<msgid>[^ ]*) [\[](?<extradata>[^ ]*) \w*\=\"(?<project_name>[^\"]*)\" \w*\=\"(?<environment>[^\"]*)\"\]\[[a-zA-Z,\s]+[\=\"]+(?<meta_seq_id>[\d]*)\"\] (?<message>.+)$/
      time_format %Y-%m-%dT%H:%M:%S.%L%z
      types meta_seq_id:integer
    </pattern>

    <pattern>
      format regexp
      expression /^\<(?<pri>[0-9]{1,5})\>[1] (?<time>[0-9]{4}\-[0-9]{2}\-[0-9]{2}[T][0-9]{2}\:[0-9]{2}\:[0-9]{2}\.[0-9]{3}\+[0-9]{2}\:[0-9]{2}) (?<container>[^ ]*) (?<ident>[^ ]*) (?<pid>[-0-9]*) (?<msgid>[^ ]*) [\[](?<extradata>[^ ]*) \w*\=\"(?<project_name>[^\"]*)\" \w*\=\"(?<environment>[^\"]*)\"\] (?<message>.+)$/
      time_format %Y-%m-%dT%H:%M:%S.%L%z
    </pattern>

    <pattern>
      format regexp
      expression /^\<(?<pri>[0-9]{1,5})\>[1] (?<time>[0-9]{4}\-[0-9]{2}\-[0-9]{2}[T][0-9]{2}\:[0-9]{2}\:[0-9]{2}\.[0-9]{3}\+[0-9]{2}\:[0-9]{2}) (?<message>.+)$/
      time_format %Y-%m-%dT%H:%M:%S.%L%z
    </pattern>

    # catch all - if necessary
    <pattern>
      format regexp
      expression /^(?<message>.+)$/
    </pattern>
  </parse>
</source>

# feed from remote syslog-ng-stderr.log
<source>
  @type tail
  read_lines_limit 10
  path /var/log/syslog-ng-stderr.log
  pos_file "/var/log/td-agent/syslog-ng-stderr.pos"
  tag syslog-ng-stderr
  <parse>
    @type regexp
    expression /^\[(?<time>[0-9]{4}\-[0-9]{2}\-[0-9]{2}[T][0-9]{2}\:[0-9]{2}\:[0-9]{2}\.[0-9]{6})\] (?<message>.+)$/
    time_format %Y-%m-%dT%H:%M:%S.%L
  </parse>
</source>

# feed from remote syslog-ng-stdout remote files
# verified feed on 11/04/16
<source>
  @type tail
  read_lines_limit 10
  path /var/log/syslog-ng-stdout.log
  pos_file "/var/log/td-agent/syslog-ng-stdout.pos"
  tag syslog-ng-stdout
  <parse>
    @type regexp
    expression /^\[(?<time>[0-9]{4}\-[0-9]{2}\-[0-9]{2}[T][0-9]{2}\:[0-9]{2}\:[0-9]{2}\.[0-9]{6})\] (?<message>.+)$/
    time_format %Y-%m-%dT%H:%M:%S.%L
  </parse>
</source>

# Remove until fluentd can send and be received as an integer - currently is received as a string
#<match syslog.**>
#  type record_reformer
#  time_nano ${t = Time.now; ((t.to_i * 1000000000) + t.nsec).to_s}
#  tag ${tag_suffix[1]}
#</match>

<system>
 root_dir /var/log/td-agent
</system>

# Match all
<match **>
  @type copy

  <store>
    # store to send to aws elasticsearch
    @type "aws-elasticsearch-service"
    logstash_format true
    include_tag_key true
    reload_on_failure false
    reload_connections false
    #resurrect_after 5
    <buffer>
      @type file
      path /var/log/td-agent/buffer
      chunk_limit_size 6MB
      #chunk_limit_records ##
      total_limit_size 5GB
      chunk_full_threshold 0.95
      queued_chunks_limit_size 8MB
      #
      flush_interval 10s
      flush_mode interval
      flush_thread_count 1
      flush_thread_interval 2
      flush_thread_burst_interval 3
      delayed_commit_timeout 30
      overflow_action throw_exception
      #
      retry_forever false
      #retry_timeout 15m
      retry_max_times 10
      retry_secondary_threshold 0.8
      retry_type periodic
      retry_wait 15s
      retry_max_interval 5
      #timekey_use_utc true
    </buffer>
    <endpoint>
      url
      region
      access_key_id
      secret_access_key
    </endpoint>
  </store>

  #<store>
  #  # send to datadog
  #  @type datadog
  #  @id awesome_agent
  #  api_key DD_APPLICATION_KEY
  #  #use_json true
  #  include_tag_key true
  #  tag_key 'tag'

  #  dd_source 'fluentd'
  #  dd_sourcecategory 'syslog'

  #  <buffer>
  #    @type file
  #    path /var/log/td-agent/dd-buffer
  #    chunk_limit_size 6MB
  #    total_limit_size 5GB
  #    chunk_full_threshold 0.95
  #    queued_chunks_limit_size 8MB
  #    #
  #    flush_interval 10s
  #    flush_mode interval
  #    flush_thread_count 1
  #    flush_thread_interval 2
  #    flush_thread_burst_interval 3
  #    delayed_commit_timeout 30
  #    overflow_action throw_exception
  #    #
  #    retry_forever false
  #    retry_max_times 10
  #    retry_secondary_threshold 0.8
  #    retry_type periodic
  #    retry_wait 15s
  #    retry_max_interval 5
  #  </buffer>
  #</store>
</match>

